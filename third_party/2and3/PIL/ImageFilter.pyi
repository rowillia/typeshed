# Stubs for PIL.ImageFilter (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class Filter: ...

class Kernel(Filter):
    filterargs = ...  # type: Any
    def __init__(self, size, kernel, scale: Optional[Any] = ..., offset: int = ...) -> None: ...
    def filter(self, image): ...

class BuiltinFilter(Kernel):
    def __init__(self) -> None: ...

class RankFilter(Filter):
    name = ...  # type: str
    size = ...  # type: Any
    rank = ...  # type: Any
    def __init__(self, size, rank) -> None: ...
    def filter(self, image): ...

class MedianFilter(RankFilter):
    name = ...  # type: str
    size = ...  # type: Any
    rank = ...  # type: Any
    def __init__(self, size: int = ...) -> None: ...

class MinFilter(RankFilter):
    name = ...  # type: str
    size = ...  # type: Any
    rank = ...  # type: int
    def __init__(self, size: int = ...) -> None: ...

class MaxFilter(RankFilter):
    name = ...  # type: str
    size = ...  # type: Any
    rank = ...  # type: Any
    def __init__(self, size: int = ...) -> None: ...

class ModeFilter(Filter):
    name = ...  # type: str
    size = ...  # type: Any
    def __init__(self, size: int = ...) -> None: ...
    def filter(self, image): ...

class GaussianBlur(Filter):
    name = ...  # type: str
    radius = ...  # type: Any
    def __init__(self, radius: int = ...) -> None: ...
    def filter(self, image): ...

class UnsharpMask(Filter):
    name = ...  # type: str
    radius = ...  # type: Any
    percent = ...  # type: Any
    threshold = ...  # type: Any
    def __init__(self, radius: int = ..., percent: int = ..., threshold: int = ...) -> None: ...
    def filter(self, image): ...

class BLUR(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class CONTOUR(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class DETAIL(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class EDGE_ENHANCE(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class EDGE_ENHANCE_MORE(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class EMBOSS(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class FIND_EDGES(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class SMOOTH(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class SMOOTH_MORE(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any

class SHARPEN(BuiltinFilter):
    name = ...  # type: str
    filterargs = ...  # type: Any
