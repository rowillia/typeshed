# Stubs for PIL.ImageCms (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from . import Image

DESCRIPTION = ...  # type: str
VERSION = ...  # type: str
core = ...  # type: Any
INTENT_PERCEPTUAL = ...  # type: int
INTENT_RELATIVE_COLORIMETRIC = ...  # type: int
INTENT_SATURATION = ...  # type: int
INTENT_ABSOLUTE_COLORIMETRIC = ...  # type: int
DIRECTION_INPUT = ...  # type: int
DIRECTION_OUTPUT = ...  # type: int
DIRECTION_PROOF = ...  # type: int
FLAGS = ...  # type: Any

class ImageCmsProfile:
    def __init__(self, profile) -> None: ...
    def tobytes(self): ...

class ImageCmsTransform(Image.ImagePointHandler):
    transform = ...  # type: Any
    input_mode = ...  # type: Any
    output_mode = ...  # type: Any
    output_profile = ...  # type: Any
    def __init__(self, input, output, input_mode, output_mode, intent: Any = ..., proof: Optional[Any] = ..., proof_intent: Any = ..., flags: int = ...) -> None: ...
    def point(self, im): ...
    def apply(self, im, imOut: Optional[Any] = ...): ...
    def apply_in_place(self, im): ...

def get_display_profile(handle: Optional[Any] = ...): ...

class PyCMSError(Exception): ...

def profileToProfile(im, inputProfile, outputProfile, renderingIntent: Any = ..., outputMode: Optional[Any] = ..., inPlace: int = ..., flags: int = ...): ...
def getOpenProfile(profileFilename): ...
def buildTransform(inputProfile, outputProfile, inMode, outMode, renderingIntent: Any = ..., flags: int = ...): ...
def buildProofTransform(inputProfile, outputProfile, proofProfile, inMode, outMode, renderingIntent: Any = ..., proofRenderingIntent: Any = ..., flags: Any = ...): ...

buildTransformFromOpenProfiles = ...  # type: Any
buildProofTransformFromOpenProfiles = ...  # type: Any

def applyTransform(im, transform, inPlace: int = ...): ...
def createProfile(colorSpace, colorTemp: int = ...): ...
def getProfileName(profile): ...
def getProfileInfo(profile): ...
def getProfileCopyright(profile): ...
def getProfileManufacturer(profile): ...
def getProfileModel(profile): ...
def getProfileDescription(profile): ...
def getDefaultIntent(profile): ...
def isIntentSupported(profile, intent, direction): ...
def versions(): ...
